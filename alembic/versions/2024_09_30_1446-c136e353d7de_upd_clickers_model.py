"""upd clickers model

Revision ID: c136e353d7de
Revises: 5eec89390dbe
Create Date: 2024-09-30 14:46:50.323266

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.exc import SQLAlchemyError

# revision identifiers, used by Alembic.
revision: str = 'c136e353d7de'
down_revision: Union[str, None] = '5eec89390dbe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     ### commands auto generated by Alembic - please adjust! ###
#     op.alter_column('clickers', 'audience',
#                existing_type=sa.VARCHAR(),
#                type_=sa.BigInteger(),
#                existing_nullable=True)
#     # ### end Alembic commands ###
#
#
# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.alter_column('clickers', 'audience',
#                existing_type=sa.BigInteger(),
#                type_=sa.VARCHAR(),
#                existing_nullable=True)
#     # ### end Alembic commands ###

def upgrade() -> None:
    op.execute("""
    UPDATE clickers 
    SET audience = NULL 
    WHERE audience !~ '^[0-9]+$'
    """)

    try:
        op.execute('ALTER TABLE clickers ALTER COLUMN audience TYPE BIGINT USING audience::bigint')
    except SQLAlchemyError as e:
        op.execute('ALTER TABLE clickers ALTER COLUMN audience TYPE BIGINT USING NULL')
        print(f"Warning: Some values in 'audience' column were set to NULL. Error: {str(e)}")


def downgrade() -> None:
    op.execute('ALTER TABLE clickers ALTER COLUMN audience TYPE VARCHAR USING audience::varchar')
